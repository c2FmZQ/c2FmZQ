name: release
on: 
  push:
    tags:
      - "v*.*"

jobs:
  build-and-run-tests:
    name: Build & run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: c2FmZQ/go.mod
    - name: Build
      run: cd c2FmZQ && go build ./...
    - name: Run go vet
      run: cd c2FmZQ && go vet ./...
    - name: Run go test
      run: cd c2FmZQ && go test ./...

  build-docker-image:
    name: Build test docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build test docker image
      run: docker build -t c2fmzq/c2fmzq-server:test .

  run-pwa-tests:
    name: Run PWA tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: c2FmZQ/go.mod
    - name: Build
      run: cd c2FmZQ && go build ./...
    - name: Run PWA tests
      run: ./c2FmZQ/run-pwa-tests.sh

  create-release:
    name: Create release
    needs:
      - build-and-run-tests
      - build-docker-image
      - run-pwa-tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: c2FmZQ/go.mod
    - name: Build release binaries
      run: |
        export CGO_ENABLED=0
        cd c2FmZQ
        for arch in amd64 arm arm64; do
          GOARCH="${arch}" go build -trimpath -ldflags="-s -w" -o "c2fmzq-server-${arch}" ./c2FmZQ-server
          sha256sum "c2fmzq-server-${arch}" | cut -d " " -f1 > "c2fmzq-server-${arch}.sha256"
          GOARCH="${arch}" go build -trimpath -ldflags="-s -w" -o "inspect-${arch}" ./c2FmZQ-server/inspect
          sha256sum "inspect-${arch}" | cut -d " " -f1 > "inspect-${arch}.sha256"
        done
    - name: Create release
      # https://github.com/softprops/action-gh-release/tree/v0.1.15
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
      with:
        draft: false
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          c2FmZQ/c2FmZQ-server-*
          c2FmZQ/inspect-*

  push-to-registry:
    name: Push image to docker hub
    needs:
      - build-and-run-tests
      - create-release
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Log in to docker hub
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
      with:
        images: c2fmzq/c2fmzq-server
    - name: Build and push docker image
      uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
